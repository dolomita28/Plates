{"mappings":"ACAA,MAAM,EAAa,SAAS,cAAc,WACpC,EAAU,SAAS,cAAc,QACjC,EAAY,SAAS,cAAc,cACnC,EAAY,SAAS,cAAc,WACnC,EAAY,SAAS,cAAc,WACnC,EAAY,SAAS,cAAc,cAInC,EAAgB,KAClB,IAAM,EAAS,IAAI,KAAK,EAAW,OAC7B,EAAM,IAAI,KAAK,EAAQ,OAC7B,QAAQ,IAAI,iBAAkB,EAAQ,GAEtC,IAEI,EAAM,IACN,EAAU,UAAU,OAAO,UAC3B,EAAU,UAAY,+DAE9B,EAGM,EAAiB,KACnB,CAAC,EAAW,EAAQ,EAAU,CAAC,QAAQ,AAAA,GAAQ,EAAK,UAAU,OAAO,cAErE,EAAU,UAAY,6CACtB,EAAU,UAAU,IAAI,SAC5B,EAGM,EAAgB,KAClB,CAAC,EAAW,EAAQ,EAAU,CAAC,QAAQ,AAAA,IAC9B,EAAK,QACN,EAAK,UAAU,IAAI,aAEnB,EAAU,UAAU,OAAO,UAEnC,EACJ,EAeA,CAAC,EAAW,EAAQ,CAAC,QAAQ,AAAA,GAAQ,EAAK,iBAAiB,SAAU,IAErE,EAAU,iBAAiB,SAAU,IAAM,EAAU,UAAU,OAAO,cAGtE,EAAU,iBAAiB,QAAS,KAChC,IAAM,EAAO,SAAS,cAAc,QACpC,EAAK,UAAU,OAAO,UAEtB,IAAM,EAAS,SAAS,cAAc,WACtC,EAAO,UAAU,IAAI,SACzB,GAGA,EAAU,iBAAiB,QAAS,UAChC,IACA,GAOJ","sources":["<anon>","src/js/app.js"],"sourcesContent":["var $388b617130f03bd4$exports = {};\nconst $388b617130f03bd4$var$dateInicio = document.querySelector(\"#inicio\");\nconst $388b617130f03bd4$var$dateFin = document.querySelector(\"#fin\");\nconst $388b617130f03bd4$var$matricula = document.querySelector(\"#matricula\");\nconst $388b617130f03bd4$var$btnEnviar = document.querySelector(\"#enviar\");\nconst $388b617130f03bd4$var$btnCerrar = document.querySelector(\"#cerrar\");\nconst $388b617130f03bd4$var$validator = document.querySelector(\".validator\");\n// validar las fechas\nconst $388b617130f03bd4$var$validarFechas = ()=>{\n    const inicio = new Date($388b617130f03bd4$var$dateInicio.value);\n    const fin = new Date($388b617130f03bd4$var$dateFin.value);\n    console.log(\"validar fechas\", inicio, fin);\n    $388b617130f03bd4$var$clearValidador();\n    if (fin < inicio) {\n        $388b617130f03bd4$var$validator.classList.remove(\"hidden\");\n        $388b617130f03bd4$var$validator.innerHTML = `Error! La fecha Hasta no puede ser anterior a la fecha Desde`;\n    }\n};\n// limpiar el validador\nconst $388b617130f03bd4$var$clearValidador = ()=>{\n    [\n        $388b617130f03bd4$var$dateInicio,\n        $388b617130f03bd4$var$dateFin,\n        $388b617130f03bd4$var$matricula\n    ].forEach((item)=>item.classList.remove(\"incorrect\"));\n    // ocultar validador\n    $388b617130f03bd4$var$validator.innerHTML = \"Por favor rellene los campos obligatorios!\";\n    $388b617130f03bd4$var$validator.classList.add(\"hidden\");\n};\n// validar que los campos han sido rellenados\nconst $388b617130f03bd4$var$validarCampos = ()=>{\n    [\n        $388b617130f03bd4$var$dateInicio,\n        $388b617130f03bd4$var$dateFin,\n        $388b617130f03bd4$var$matricula\n    ].forEach((item)=>{\n        if (!item.value) {\n            item.classList.add(\"incorrect\");\n            $388b617130f03bd4$var$validator.classList.remove(\"hidden\");\n        }\n    });\n};\nconst $388b617130f03bd4$var$muestraResultado = (matricula, desde, hasta)=>{\n    const main = document.querySelector(\"main\");\n    main.classList.add(\"hidden\");\n    const result = document.querySelector(\".result\");\n    result.classList.remove(\"hidden\");\n    const resultInfo = document.querySelector(\".result-info\");\n    resultInfo.innerHTML = `Matrícula <em>4128HLZ</em> correctamente creada desde <em>29/05/2023</em> hasta <em>31/05/2023</em>.`;\n};\n// EVENT LISTENERS\n// validar las fechas al introducir un valor\n[\n    $388b617130f03bd4$var$dateInicio,\n    $388b617130f03bd4$var$dateFin\n].forEach((date)=>date.addEventListener(\"change\", $388b617130f03bd4$var$validarFechas));\n// quitar el borde rojo cuando se pone valor en el campo matricula\n$388b617130f03bd4$var$matricula.addEventListener(\"change\", ()=>$388b617130f03bd4$var$matricula.classList.remove(\"incorrect\"));\n// cerrar el formulario resumen\n$388b617130f03bd4$var$btnCerrar.addEventListener(\"click\", ()=>{\n    const main = document.querySelector(\"main\");\n    main.classList.remove(\"hidden\");\n    const result = document.querySelector(\".result\");\n    result.classList.add(\"hidden\");\n});\n// enviar el formulario\n$388b617130f03bd4$var$btnEnviar.addEventListener(\"click\", async ()=>{\n    $388b617130f03bd4$var$clearValidador();\n    $388b617130f03bd4$var$validarCampos();\n//muestraResultado('','','');\n// enviar formulario\n// const result = await InvocarApiSkiData()\n// if (result === 'OK')\n//     console.log('Mostrar PANEL RESULTADO')\n});\n// LLAMADA A API SKIDATA\nconst $388b617130f03bd4$var$InvocarApiSkiData = async ()=>{\n    return new Promise((resolve, reject)=>{\n        $388b617130f03bd4$var$doPostApiSkiDate().then(resolve(\"OK\")).catch(reject(err));\n    });\n};\nconst $388b617130f03bd4$var$doPostApiSkiDate = async ()=>{\n    const url = `http://HELIOS:8080/skdta_pass/SetWhitelist`;\n    const plate = $388b617130f03bd4$var$matricula.value;\n    const from = $388b617130f03bd4$var$dateInicio.value;\n    const to = $388b617130f03bd4$var$dateFin.value;\n    const bodyRequest = `{\r\n        \"Command\":\"0\",\r\n        \"licensePlate: ${plate},\r\n        \"validbegin\": ${from},\r\n        \"validend\": ${to}\r\n    }`;\n    try {\n        const res = await fetch(url, {\n            Method: \"POST\",\n            Headers: {\n                Accept: \"application.json\",\n                \"Content-Type\": \"application/json\"\n            },\n            Body: bodyRequest,\n            Cache: \"default\"\n        });\n        return res;\n    } catch (err1) {\n        return err1;\n    }\n};\n\n\n//# sourceMappingURL=index.0c0743b3.js.map\n","const dateInicio = document.querySelector('#inicio');\r\nconst dateFin = document.querySelector('#fin');\r\nconst matricula = document.querySelector('#matricula');\r\nconst btnEnviar = document.querySelector('#enviar');\r\nconst btnCerrar = document.querySelector('#cerrar');\r\nconst validator = document.querySelector('.validator');\r\n\r\n\r\n// validar las fechas\r\nconst validarFechas = () => {\r\n    const inicio = new Date(dateInicio.value);\r\n    const fin = new Date(dateFin.value);    \r\n    console.log('validar fechas', inicio, fin);\r\n\r\n    clearValidador();\r\n\r\n    if (fin < inicio) {\r\n        validator.classList.remove('hidden');\r\n        validator.innerHTML = `Error! La fecha Hasta no puede ser anterior a la fecha Desde`;\r\n    }\r\n}\r\n\r\n// limpiar el validador\r\nconst clearValidador = ()=>{\r\n    [dateInicio,dateFin,matricula].forEach(item => item.classList.remove('incorrect'));\r\n    // ocultar validador\r\n    validator.innerHTML = 'Por favor rellene los campos obligatorios!'\r\n    validator.classList.add('hidden');\r\n}\r\n\r\n// validar que los campos han sido rellenados\r\nconst validarCampos = () => {\r\n    [dateInicio,dateFin,matricula].forEach(item => {\r\n        if (!item.value )   {    \r\n            item.classList.add('incorrect');    \r\n\r\n            validator.classList.remove('hidden');\r\n        }\r\n    })\r\n}\r\n\r\nconst muestraResultado = (matricula, desde, hasta) => {\r\n    const main = document.querySelector('main');\r\n    main.classList.add('hidden');\r\n\r\n    const result = document.querySelector('.result');\r\n    result.classList.remove('hidden');\r\n\r\n    const resultInfo = document.querySelector('.result-info');\r\n    resultInfo.innerHTML = `Matrícula <em>4128HLZ</em> correctamente creada desde <em>29/05/2023</em> hasta <em>31/05/2023</em>.`\r\n}\r\n\r\n// EVENT LISTENERS\r\n// validar las fechas al introducir un valor\r\n[dateInicio,dateFin].forEach(date => date.addEventListener('change', validarFechas));\r\n// quitar el borde rojo cuando se pone valor en el campo matricula\r\nmatricula.addEventListener('change', () => matricula.classList.remove('incorrect'));\r\n\r\n// cerrar el formulario resumen\r\nbtnCerrar.addEventListener('click', () => {\r\n    const main = document.querySelector('main');\r\n    main.classList.remove('hidden');\r\n\r\n    const result = document.querySelector('.result');\r\n    result.classList.add('hidden'); \r\n})\r\n\r\n// enviar el formulario\r\nbtnEnviar.addEventListener('click', async () => {\r\n    clearValidador();\r\n    validarCampos();    \r\n\r\n    //muestraResultado('','','');\r\n    // enviar formulario\r\n    // const result = await InvocarApiSkiData()\r\n    // if (result === 'OK')\r\n    //     console.log('Mostrar PANEL RESULTADO')\r\n})\r\n\r\n// LLAMADA A API SKIDATA\r\n\r\nconst InvocarApiSkiData = async () => {\r\n    return new Promise((resolve, reject) => {\r\n        doPostApiSkiDate()\r\n        .then(resolve('OK'))\r\n        .catch(reject(err))\r\n    })\r\n}\r\n\r\nconst doPostApiSkiDate = async () => {\r\n    const url = `http://HELIOS:8080/skdta_pass/SetWhitelist`;\r\n    const plate = matricula.value;\r\n    const from = dateInicio.value;\r\n    const to = dateFin.value;\r\n\r\n    const bodyRequest = `{\r\n        \"Command\":\"0\",\r\n        \"licensePlate: ${plate},\r\n        \"validbegin\": ${from},\r\n        \"validend\": ${to}\r\n    }`;\r\n    \r\n    try{\r\n        const res = await fetch(url, {\r\n            Method: 'POST',\r\n            Headers: {\r\n              Accept: 'application.json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            Body: bodyRequest,\r\n            Cache: 'default'\r\n          });\r\n        \r\n        return res;\r\n    }\r\n    catch(err){\r\n        return err;\r\n    }\r\n    \r\n}"],"names":["$388b617130f03bd4$var$dateInicio","document","querySelector","$388b617130f03bd4$var$dateFin","$388b617130f03bd4$var$matricula","$388b617130f03bd4$var$btnEnviar","$388b617130f03bd4$var$btnCerrar","$388b617130f03bd4$var$validator","$388b617130f03bd4$var$validarFechas","inicio","Date","value","fin","console","log","$388b617130f03bd4$var$clearValidador","classList","remove","innerHTML","forEach","item","add","$388b617130f03bd4$var$validarCampos","date","addEventListener","main","result"],"version":3,"file":"index.0c0743b3.js.map"}